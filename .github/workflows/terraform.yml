name: "Vprofile IAC - Teardown"

on:
  workflow_dispatch: # This triggers the workflow manually.

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_REGION: us-east-1
  EKS_CLUSTER: vprofile-eks

jobs:
  terraform:
    name: "Destroy terraform code"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout source code 
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform (no version specified)
        uses: hashicorp/setup-terraform@v2

      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan (Destroy)
        id: plan
        run: terraform plan -destroy -no-color -input=false -out destroy-planfile

      - name: Terraform apply (Destroy)
        id: apply
        run: terraform apply -auto-approve -input=false -parallelism=1 destroy-planfile

      - name: Get Kube config file
        id: getconfig
        run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER }} 

      - name: Delete Ingress controller
        run: kubectl delete -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.3/deploy/static/provider/aws/deploy.yaml

      - name: Delete the Kubernetes cluster (via eksctl or Terraform)
        run: |
          # If you created the cluster using eksctl:
          # eksctl delete cluster --name ${{ env.EKS_CLUSTER }} --region ${{ env.AWS_REGION }}
          
          # If you created the cluster using Terraform, you can just run the destroy command from Terraform:
          terraform destroy -auto-approve
